#!/usr/bin/perl
use strict;
use warnings;

use lib '/usr/local/pf/lib';
use pf::config;
use feature "say";
use Log::Log4perl;
use Readonly;
use pf::jsonAPI::jsonclient;

print STDERR "Loaded the perl snmptrapd handler\n";

NetSNMP::TrapReceiver::register( "all", \&trap_receiver )
    || warn "failed to register our perl trap handler\n";

sub trap_receiver {
    my %PDU      = %{ $_[0] };
    my @VARBINDS = @{ $_[1] };

    my $logger = Log::Log4perl->get_logger('pftraplistener');
    
    # map the variable bindings to a hash where key is OID and value is a string containing type and value
    my %VARBINDS
        = map { $_->[0] => ( sprintf "type=%-2d value=%s", $_->[2], $_->[1] ); } @VARBINDS;

    my %trap = (
        PDU      => \%PDU,
        VARBINDS => \%VARBINDS,
        PFTYPE   => undef,
    );
    $trap{"PFTYPE"} = "snmptrap";
    

    my $json_client = pf::jsonAPI::jsonclient->new();
    $json_client->call_WebAPI( 'snmptrap', %trap );

    return 1;

}

